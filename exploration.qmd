---
title: "Exploration des données"
title-block-banner: false
description: | 
  Petite description de cette page.
# à changer
date: "2022-12-20"
# Modifier les détails que vous voulez
author:
  - name: "Abdoul Dramane TONDE"
    # Votre site web perso ou github
    url: https://github.com/Dramane98
    # les champs d'affiliation sont optionnels, vous pouvez les
    # comment out en ajoutant un # devant.
    affiliation: FAS1002
    affiliation-url: https://FAS1002.github.io/A22
    # changer pour votre propre orcid id
    # https://orcid.org/ pour vous inscrire.
    orcid: 0000-0000-0000-0000

# TRUE == Générer une citation pour cette page précise. Pour enlever, mettre false.
citation: false
# Inclure les références que vous utilisez dans vos rapports. Je conseille Zotero pour construire
# ce fichier ou de connecter RStudio directement pour pouvoir citer avec @nom-de-reference.
bibliography: references.bib
---

## Telechargement des données

```{r echo=FALSE, warning=FALSE, message=FALSE}

library(fs)
library(lubridate)
library(tidyverse)
library(skimr)
library(countrycode)
```


### Données d'Our World in Data

```{r variable continent, warning=FALSE, message=FALSE, error=FALSE}

URL <- "https://github.com/owid/co2-data/raw/master/owid-co2-data.csv"

fname <- paste(today(),
               "owid-co2-data.csv",
               sep = "_")
base_path <- path("data", "raw")
 
fpath <- path(base_path,
              fname)  

#Le ! a été ajouté pour signifié NOT comme dans:
# Si (le fichier n'existe PAS) {
#    Exécuter cette parti de code
#    } sinon {
#    Exécuter cette partie de code
#    }
if (!file.exists(fpath)) {
    file.remove(junk)
  download.file(url = URL,
                destfile = fpath) 
  paste("Le fichier",
        fpath,
        "n'existait pas, il a donc été téléchargé à l'instant."
  )
  
} else {
  print(paste("Le fichier",
              fpath,
              "existe déjà, il ne sera pas téléchargé à nouveau.")
  )
}

data <- read_csv(fpath) 
```

### Données de Life Expectancy at Birth

```{r download, read, cache=TRUE, warning=FALSE, message=FALSE, error=FALSE}

URL1 <- "https://docs.google.com/spreadsheets/d/1RheSon1-q4vFc3AGyupVPH6ptEByE-VtnjOCselU0PE/export?format=xlsx"

fname1 <- paste(month(today()),
               "leab-data.xlsx",
               sep = "_")
base_path1 <- path("data", "raw")
 
fpath1 <- path(base_path1,
              fname1)  

#Le ! a été ajouté pour signifié NOT comme dans:
# Si (le fichier n'existe PAS) {
#    Exécuter cette parti de code
#    } sinon {
#    Exécuter cette partie de code
#    }
if (!file.exists(fpath1)) {
    file.remove(junk)
  download.file(url = URL1,
                destfile = fpath1) 
  paste("Le fichier",
        fpath1,
        "n'existait pas, il a donc été téléchargé à l'instant."
  )
  
} else {
  print(paste("Le fichier",
              fpath1,
              "existe déjà, il ne sera pas téléchargé à nouveau.")
  )
}

data1 <- readxl::read_excel(fpath1,sheet = 4) 
data1_tbl <- as_tibble(data1)
view(data1)  
skim(data1)
dim(data1)
summary(data1)
```

## Création de la variable continent pour les données d'Our World in Data

```{r warning=FALSE, message=FALSE, error=FALSE}

data_tbl <- as_tibble(data)
data_tbl <- data_tbl %>%
    select(country,year,iso_code,population,gdp,co2, ends_with("per_capital"), primary_energy_consumption) %>%
           mutate(continent = countrycode(data_tbl$iso_code,
                                   "iso3c",
                                   "continent"))

missing <- data_tbl %>%
    select(country,continent) %>%
    filter(!complete.cases(.))

data_continent <- data_tbl %>%
    drop_na(continent)
data_continent1 <- as_tibble(data_continent)
skim(data_continent)
```

## Quelques données Extremes

```{r warning=FALSE, message=FALSE, error=FALSE}

data %>%
    filter(country == "Afghanistan") %>%
    select(year, population, iso_code, cumulative_luc_co2)

```

## Evolution du ratio country/co2

```{r warning=FALSE, message=FALSE, error=FALSE}

data_tbl %>%
    group_by(country, co2) %>%
    summarise(new = n()) %>%
    mutate(new1 = new / sum(new) * 100)
evolution <- group_by(.data = data_tbl, country, co2) %>%
    summarise(n = n())

evolution <- evolution %>% mutate(pourcent = n / sum(n) * 100)
```

## Filtre des pays qui ont plus de 400000 habitants

```{r plotly, message=FALSE, warning=FALSE, eval=FALSE}

population <- data %>% filter(population >= 400000)
dim(population)
```

------------------------------------------------------------------------

Ici nous retrouvons les pays dont la population est superieure ou egale à 400000 habitants.

```{r}

library(ggplot2)

p1 <- ggplot(data = data,
       mapping = aes(x = year))
       
p1 +   geom_histogram(color ="black",
                   fill = "#facade",
                   binwidth = 1)+
    theme_dark()
      
```

Voila un histogramme selon la variable année.

## Exportation des données

```{r warning=FALSE, message=FALSE, error=FALSE}

write_csv(data,file = "data.csv",na = "NA", col_names = TRUE)
write_csv(data_tbl,file = "data_tbl.csv",na = "NA", col_names = TRUE)
write_csv(data1,file = "data1.csv",na = "NA", col_names = TRUE)
write_csv(data1_tbl,file = "data1_tbl.csv",na = "NA", col_names = TRUE)
write_csv(data_continent1,file = "data_continent1.csv",na = "NA", col_names = TRUE)

```

Ici nous retrouvons tous nos données exportées.
